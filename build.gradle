plugins {
    id 'architectury-plugin' version "${arch_plugin_version}" apply false
    id 'dev.architectury.loom' version "${loom_version}" apply false
    id 'com.github.johnrengelman.shadow' version "${shadow_version}" apply false
    id 'io.github.pacifistmc.forgix' version "${forgix_version}"
}
setup()

ext.modVersion = mod_version + (build_number != null ? "-build.${build_number}" : '')

architectury {
    minecraft = minecraft_version
}

forgix {
    group = maven_group
    mergedJarName = "${archives_base_name}-${modVersion}+mc${minecraft_version}.jar"
    outputDir = 'build/libs/merged'
}

subprojects {
    apply plugin: 'dev.architectury.loom'

    loom.silentMojangMappingsLicense()

    configurations { shade }

    dependencies {
        minecraft "com.mojang:minecraft:${minecraft_version}"
        mappings loom.layered() {
            mappings "org.quiltmc:quilt-mappings:${minecraft_version}+build.${quilt_mappings_version}:intermediary-v2"
            parchment "org.parchmentmc.data:parchment-${minecraft_version}:${parchment_version}@zip"
            officialMojangMappings { nameSyntheticMembers = false }
        }
    }

    remapJar.finalizedBy(mergeJars)
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'architectury-plugin'

    archivesBaseName = rootProject.archives_base_name
    version = rootProject.mod_version
    group = rootProject.maven_group

    tasks.withType(JavaCompile).configureEach {
        options.encoding = 'UTF-8'
        options.release = 17
    }

    repositories {
        mavenCentral()
        maven { url = 'https://maven.fabricmc.net' }
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://maven.architectury.dev' }
        maven { url = 'https://maven.quiltmc.org/repository/release' }
        maven { url = 'https://oss.sonatype.org/content/repositories/snapshots' }
        maven { url = 'https://maven.parchmentmc.org' }
        maven { url = 'https://jitpack.io' }
        maven { url = 'https://maven.terraformersmc.com/releases' }
        maven { url = 'https://maven.blamejared.com' }
        maven { url = 'https://maven.tterrag.com' }
        maven {
            url = 'https://api.modrinth.com/maven'
            content {
                includeGroup 'maven.modrinth'
            }
        }
        maven {
            url = 'https://cursemaven.com'
            content {
                includeGroup 'curse.maven'
            }
        }
    }

    java.withSourcesJar()
}

def setup() {
    println "Template Mod v${mod_version}"
    String buildNumber = System.getenv('GITHUB_RUN_NUMBER')
    if(buildNumber != null) {
        println 'Build #' + buildNumber
        ext.build_number = buildNumber
    } else ext.build_number = null
    println()

    println '\nPlugin versions:'
    apply plugin: 'architectury-plugin'
}
